swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions/{monthNumb}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Transactions API
      description: API for fetching a user transactions list
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: monthNumb
          description: month number of the requested transactions
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User transactions list retrieved successully
          schema:
            $ref: "#/definitions/ApiTransactionsResponse"
        "400":
          description: Invalid Fields
        "401":
          description: Authorization information is missing or invalid.
        "500":
          description: Internal Server Error
  /user/transactions/{idTransaction}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Specific Transaction API
      description: API for fetching a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: idTransaction
          description: id of the requested transaction
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User specific transaction retrieved successully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: A transaction with the specified ID was not found.
        "500":
          description: Internal Server Error
  /user/transactions/{idTransaction}/properties:
    patch:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update Transaction API
      description: API for updating properties (category or/and notes data) of a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: idTransaction
          description: id of the requested transaction
          required: true
        - in: body
          name: body
          description: Update transation propertie(s)
          required: true
          schema:
            $ref: "#/definitions/TransactionProperties"
      produces:
        - application/merge-patch+json
      responses:
        "200":
          description: transaction data added successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: A transaction with the specified ID was not found.
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  ApiTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactions:
            type: array
            items:
              $ref: "#/definitions/Transaction"
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: transaction id
        example: "vkrpcerdpp1"
      date:
        type: string
        format: date-time
        description: transaction date
        example: "2022-06-20T09:12:28Z"
      description:
        type: string
        description: transaction description
        example: "Golden Sun Bakery"
      amount:
        type: number
        description: transaction amount
        example: 5
      balance:
        type: number
        description: account balance
        example: 2082
      transactionType:
        type: string
        description: transaction type
        example: "Electronic"
      category:
        type: string
        description: transaction category
        example: "food"
      notes:
        type: string
        description: notes on transaction
        example: "invoice added"
  TransactionProperties:
    type: object
    properties:
      category:
        type: string
        description: transaction category
      notes:
        type: string
        description: notes on transaction
